* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
*:before,
*:after {
  box-sizing: border-box;
}
.dashboard {
  display: grid;
  font-family: 'Inter', sans-serif;
  grid-template-rows: 80px 1fr 80px;
  color: #fff;
  height: 100vh;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: bottom;
  background-color: linear-gradient(
    rgba(34, 34, 34, 0.6),
    rgba(34, 34, 34, 0.6)
  );
}
.header,
.footer {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: 20px;
}
.main {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 20px;
}
.bg-morning {
  background-image: linear-gradient(
      rgba(34, 34, 34, 0.6),
      rgba(34, 34, 34, 0.6)
    ),
    url(../images/02.jpg);
}
.bg-night {
  background-image: linear-gradient(
      rgba(34, 34, 34, 0.6),
      rgba(34, 34, 34, 0.6)
    ),
    url(../images/01.jpg);
}
.bg-afternoon {
  background-image: linear-gradient(
      rgba(34, 34, 34, 0.6),
      rgba(34, 34, 34, 0.6)
    ),
    url(../images/03.jpg);
}
.bg-evening {
  background-image: linear-gradient(
      rgba(34, 34, 34, 0.6),
      rgba(34, 34, 34, 0.6)
    ),
    url(../images/04.jpg);
}
.date-time {
  display: flex;
  flex-direction: column;
  align-items: center;
  font-size: 30px;
  font-weight: bold;
}
.time {
  display: inline-block;
  font-size: 150px;
  width: 575px;
}
.bg-popup {
  background-image: linear-gradient(
    rgba(34, 34, 34, 0.8),
    rgba(34, 34, 34, 0.8)
  );
  padding: 20px;
  border-radius: 10px;
}

/* Todo List */
.btn-todo-list {
  cursor: pointer;
  font-size: 20px;
}
.todo-list {
  position: absolute;
  right: 20px;
  bottom: 70px;
  display: none !important;
}
.todo-list .add-new-item {
  padding: 8px 5px;
  cursor: pointer;
  width: 90px;
}
.todo-list input[type='text'] {
  font-size: 15px;
  padding: 8px 5px;
  line-height: 18px;
  width: 220px;
  border: 1px solid #000000;
  background: #fff;
  border-radius: 4px;
  color: #6b6b6b;
}
.todo-list label {
  font-size: 15px;
  line-height: 35px;
  width: 220px;
  padding: 0 0 0 5px;
  border-bottom: 1px dashed #ffffff26;
}
.todo-list input[type='text']:focus {
  color: #333;
}
.todo-list .list-item button {
  padding: 5px;
  font-size: 20px;
  width: 25px;
  color: #aeaeae;
  background: transparent;
  border: none;
  cursor: pointer;
}
.todo-list .list-item button.edit:hover .fa-pencil {
  color: #f49b03;
}
.todo-list .list-item button.edit:hover .fa-check {
  color: #4fc74f;
}
.todo-list .list-item button.delete:hover {
  color: red;
}
.todo-list .list-item input[type='text'] {
  display: none;
}
.todo-list .list-item.editMode input[type='text'] {
  display: block;
}
.todo-list .list-item.editMode label {
  display: none;
}

/* Todo List completed tasks  */
.todo-list .completed-tasks label {
  text-decoration: line-through;
  color: #888;
}

/* Weather */
.weather {
  display: flex;
  position: absolute;
  gap: 30px;
  top: 85px;
  right: 20px;
  display: none;
}
.weather.active,
.todo-list.active {
  display: flex !important;
}
.city {
  font-size: 25px;
  font-weight: bold;
}
.clouds {
  font-size: 15px;
  color: #d3d3d3;
}
.degrees {
  font-size: 40px;
  text-align: center;
  display: flex;
  gap: 17px;
}
.wi {
  font-size: 40px;
  padding-top: 2px;
}
.clouds:first-letter {
  text-transform: uppercase;
}
.btn-weather {
  display: grid;
  grid-template-columns: 50px 50px;
  padding-top: 22px;
  padding-right: 4px;
  justify-items: end;
  align-items: center;
  row-gap: 8px;
  column-gap: 12px;
  cursor: pointer;
}
.btn-weather .city {
  font-size: 15px;
  font-weight: normal;
  grid-column: span 2;
}
.btn-weather .degrees {
  font-size: 25px;
  padding-top: 2px;
}
.btn-weather .wi {
  font-size: 24px;
  padding-top: 2px;
}

/* Flex */
.flex {
  display: flex;
}
.flex-row {
  flex-direction: row;
}
.flex-column {
  flex-direction: column;
}
.gap-m {
  gap: 10px;
}
.gap-l {
  gap: 15px;
}
.align-items-center {
  align-items: center;
}

/* Animation */
.fa-pulse {
  animation-name: rotateZ;
  animation-duration: 1s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-timing-function: steps(8);
}
@keyframes rotateZ {
  from {
    transform: rotateZ(0deg);
  }
  to {
    transform: rotateZ(359deg);
  }
}
